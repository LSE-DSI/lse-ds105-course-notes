---
subtitle: "DS105 Data for Data Science"
title: "<font style='font-size:1em;'>üóìÔ∏è Week 02<br/> Operating Systems, Files & The Terminal</font>"
author: Dr. [Jon Cardoso Silva](https://www.lse.ac.uk/DSI/People/Jonathan-Cardoso-Silva)
institute: '[LSE Data Science Institute](https://twitter.com/lsedatascience)'
date: 4 October 2022
date-meta: 4 October 2022
toc: true
toc-depth: 1
toc-title: "What we will cover today"
center-title-slide: false
from: markdown+emoji
format:
  revealjs: 
    fig-responsive: true
    theme: simple
    slide-number: true
    mouse-wheel: false
    chalkboard: 
      buttons: true
    preview-links: true
    logo: /figures/logos/LSE Data Science Institute.png
    css: /css/styles_slides.css
    footer: 'DS105 - Data for Data Science :desktop_computer: :juggling_person:'
---

# Operating Systems

## What Operating Systems (OS) do {.smaller}

::: columns

::: {.column style="width:50%;font-size:0.9em;"}

::: {.incremental}
- A computer can be divided into four parts:
  - <mark>hardware</mark> ‚Äî provides the basic computing resources for the system
  - <mark>application programs</mark> ‚Äî define how these resources are used
  - <mark>operating system</mark> ‚Äî controls the hardware and coordinates its use among the various application programs for the various users
  - <mark>user</mark> ‚Äî a person or a bot (a computer script) that requests actions from the computer.

:::

:::

::: {.column width=50%}

::: {.fragment}

```{dot}
//| data-id: 1
//| fig-width: 5

digraph {
  pad=0.5;
  margin=0;
	fontname="Helvetica,Arial,sans-serif";
	node [fontname="Helvetica,Arial,sans-serif", fontcolor="]212121", fontsize="20", style=filled, fillcolor="#cee8f6", color="#5cb4e4", shape=box, margin=0.4]
	edge [fontname="Helvetica,Arial,sans-serif", penwidth=3, color="#212121";]
	
	rankdir=TB;
	
	
	user          [label="User"];
	app           [label="Application Programs\n(compilers, web browsers, development kits, etc.)", fillcolor="#e8e8e8", color="#636363"];
	os            [label="Operating System"];
	hardware      [label="Computer Hardware\n(CPU, memory, I/O devices, etc.)", fillcolor="#e8e8e8", color="#636363"];
	
  user -> app      [dir="both"];
  app  -> os       [dir="both"];
  os   -> hardware [dir="both"];

}
```

:::
:::

:::


::: footer
For more details, check [@silberschatz_operating_2005, chapter 1]
:::

## Insight into operating systems {.smaller}
<br/>
<blockquote> _"An operating system is similar to a government. Like a government, it performs no useful function by itself. It simply provides an _environment_ within which other programs can do userful work."_ </blockquote>

<p align="right">

--  [@silberschatz_operating_2005, chapter 1]
</p>

<br/>

::: {.incremental}
- If this sounds a bit vague, it is because it is!
- It is actually tricky to specify which programs are part of the OS and which ones are not.
- Let's try to define what an OS is anyways ‚è≠Ô∏è
:::

## Definition of OS {.smaller}

::: incremental
- "_The OS is the one programming running at all times on the computer._"
  - This is usually also called the <mark>kernel</mark>
- There might be other programs running alongside the OS. 
  - For example, the ![](/figures/icons/console-svgrepo-com.svg){style="height: 1em;vertical-align:center;"} `Terminal` (more on that in a minute)
- üì± Mobile computers usually have more "additional" software alongside the kernel, which we call the <mark>middleware</mark>.
  - These applications support multimedia, graphics, internal app databases, etc..
:::

## Why bother with this? {.smaller background-color="#D8DDE7"}

::: columns

::: {.column width="70%"}
::: {.incremental}
- It is improbable you will ever need to interact with the kernel directly.
- But, we often need to install custom software to perform some data analysis
	- This software might not come from Apple or Microsoft Store.
	- Those are things you have to install "manually."
:::

::: {.fragment style="background-color:white"}
::: {.callout-tip}
Let's face it, you will always encounter puzzling error messages when programming, no matter how senior or skilled you are. 

Understanding a little about how everything is tied together will help you get to the core of the problem more quickly.
:::
:::

:::

::: {.column width="30%"}
![](/figures/dalee/dalee_gigantic_wooden_question_mark_looms_above_the_big_ben_ultra_realistic_awesome_painting.png)
:::

:::

::: footer
Image created with the [DALL¬∑E](https://openai.com/blog/dall-e/) algorithm using the prompt: *'a gigantic wooden question mark looms above the big ben, ultra realistic awesome painting'* ü§ì
:::


# History of Operating Systems

![](/figures/icons/Tux.svg){.absolute width="5%" bottom="10%" left="70%"}

![](/figures/icons/Unofficial_fan_made_Windows_XP_logo_variant.svg){.absolute width="10%" bottom="10%" left="77.5%"}

![](/figures/icons/MacOS_original_logo.svg){.absolute width="9%" bottom="9%" left="90%"}

## History {.smaller}

::: columns

::: {.column style="width=60%;"}

::: incremental
- In the early days of modern computing, when computers were not accessible to everyone, software (applications) typically came with their source code open.
- <mark>Open source</mark> means you can read precisely which instructions the computer will follow when running.
- As the industry grew, most software companies released only the <mark>binaries</mark> ‚Äî a type of file you can only execute, not read as if it was a text.
  - This includes Operating Systems! ‚è≠Ô∏è

:::
:::

::: {.column style="width=40%;"}
[![A computer from the 1950s.<br/>[@computer_history_museum_1950_nodate]](/figures/week02/timeline_computers_1950.era1101.jpg){style="width:65%;margin=0;"}](https://www.computerhistory.org/timeline/)

:::

::: 

## UNIX {.smaller}

::: columns

::: {.column style="width=60%;"}

::: incremental
- UNIX was the first big Operating System, developed at Bell Labs and AT&T
- It aimed to be simple* and easy to port to any hardware architecture
- But, it required a license
- In the late 1980s and early 1990s, a group of hackers and activists developed free & open source alternatives to UNIX.
:::
:::

::: {.column style="width=40%;"}
[![How the UNIX System III looks like.](/figures/week02/Simh-pdp11-unix-sysiii.png){style="width:100%;margin=0;"}](https://www.wikiwand.com/en/Unix)

:::

::: 

::: aside

::: {style="font-size:0.65em;"}
\* As simple as these things get.
:::

:::

::: footer
[Source: [Wikimedia Commons - Rwoodsmall](https://commons.wikimedia.org/wiki/File:Simh-pdp11-unix-sysiii.png)]{style="font-size:0.6em;"}
:::

## GNU/Linux {.smaller}

::: columns

::: {.column style="width=60%;"}
::: {.fragment fragment-index=1}
- This led to the birth of one of the most influential operating systems: <mark>GNU/Linux</mark>, or simply Linux.
:::
::: {.fragment fragment-index=3}
- ![](/figures/icons/Android_robot.svg){style="height:1em;"} Android, the most popular OS for phones worldwide, is based on Linux.   
:::
::: {.fragment fragment-index=4}
- Two people were instrumental to the development of Linux
  - Richard Stallman
  - Linu**s** Torvalds
:::

::: {.fragment fragment-index=2}

::: callout-note
GNU stands for "GNU is not Unix". Computer nerds love a recursive joke.
:::

:::


:::

::: {.column style="width=40%;"}
<!-- Ghost column -->
:::

:::

::: {.fragment fragment-index=4}

![A picture of Richard Stallman](/figures/week02/Richard_Stallman_-_F%C3%AAte_de_l'Humanit%C3%A9_2014_-_010.jpg){.absolute width="15%" top="10%" left="65%"}
![A picture of Linus Torvalds](/figures/week02/1024025.jfif){.absolute width="15%" top="10%" left="85%"}

:::

![](/figures/icons/Tux.svg){.absolute height="10%" bottom="8%" right="0%"}


## macOS

::: {.incremental}
- macOS is the Operating System of Apple computers
- It is a hybrid system. It has a free, open-source component called [Darwin](https://github.com/apple/darwin-xnu), but it also includes proprietary, closed-source components.
- iOS, Apple's mobile operating system, is also based on Darwin
- Darwin is based on BDS UNIX, a derivative of the original UNIX system.
:::

![](/figures/icons/MacOS_original_logo.svg){.absolute width="9%" bottom="9%" left="95%"}


## Windows {.smaller}

- Windows has its own history. 
- Microsoft and IBM co-developed its predecessor, the OS/2 operating system.
- But then, Microsoft took on its own path and developed its own versions of the OS: Windows NT, Windows 95, Windows 98, Windows 2000, Windows XP, Windows 7, Windows Vista*, etc.
- Windows popularity can be traced to the success of the Office suite 

![](/figures/week02/Microsoft_Office_logos_2013_2019.svg){.absolute height="25%" bottom="8%" left="0%"}

![](/figures/logos/windows_logo.svg){.absolute height="10%" bottom="8%" left="95%"}

::: footer
[See [@silberschatz_operating_2005, Appendix B] for more on Windows.]{style="font-size:0.6em;"}
:::


# Virtualization {.smaller}

::: columns

::: {.column style="width=60%;"}
::: {.incremental}
- <mark>Virtualization</mark> is a technology that creates the **illusion** that you are running a separate private computer. 
- You decide how much of your CPU/RAM/Hard drive to share with the <mark>virtual machine</mark>
:::
:::

::: {.column style="width=40%;"}
![](/figures/week02/svg-virtualization.svg){.absolute width="40%" right="0%" top="17.5%"}
:::

:::


## Emulators & Virtual Machines {.smaller}

::: columns

::: {.column style="width=60%;"}

::: {.fragment fragment-index=1}
- You can install an <mark>emulator</mark> to run Windows inside Mac (and vice-versa) 
  - Provided you own a licence to install the other OS
:::
::: {.fragment fragment-index=2} 
- You can share files to and from the <mark>virtual machine</mark> inside the emulator, but the internal machine will "think" it is a separate computer.
:::
::: {.fragment fragment-index=4} 
::: {.callout-note}
- In the üñ•Ô∏è labs on üóìÔ∏è [Week 03](/weeks/week03), you will access a virtual machine that lives in the cloud
:::
:::
:::

::: {.column style="width=40%;"}

::: {.fragment fragment-index=3}
- Example of commercial virtualization softwares

![](/figures/week02/Virtualbox_logo.png){.absolute width="15%" right="5%" top="27.5%"}

![](/figures/week02/Vmware.svg){.absolute width="17.5%" right="25%" top="35%"}
:::

:::

:::

## Windows Subsystem for Linux (WSL) {.smaller}

::: {.fragment}
- In an attempt to entice Linux users (especially developers), Microsoft added a Linux emulator to Windows named "Windows Subsystem for Linux"
:::

::: {.fragment}
- You install your preferred Linux distribution
  - <mark style="color:#DD4713;">Ubuntu</mark> is one of the most popular

![](/figures/week02/ubuntu-logo14.png){.absolute width="17.5%" right="0%" bottom="57.5%"}
:::

::: columns

::: {.column width="40%"}

::: {.fragment}

::: callout-tip
- Our üñ•Ô∏è labs on Weeks 2 & 3 will focus on Linux/UNIX-like commands. 
- Windows users will have to install WSL on their computers.
:::

:::

:::

::: {.column width="60%"}

:::

:::

# The Terminal {.smaller}

- A <mark>terminal</mark>, or <mark>command prompt</mark>, is a screen or a window that lets you access the Operating System's input and output.
- There are no graphics (images/video) in the terminal, only text.

![](/figures/week02/Appleterminal2.png){.absolute width="50%" left="25%" top="40%"}

::: footer
[Image source: [Gortu](https://en.wikipedia.org/wiki/User:Gortu) at [English Wikipedia](https://commons.wikimedia.org/wiki/File:Appleterminal2.png)]{style="font-size:0.6em;"}
:::

## Shell {.smaller}

::: incremental
- Typically, the terminal runs a program (app) called the <mark>shell</mark>.
- The shell awaits, interprets, processes, executes, and responds to commands typed in by the user.
- There are many shells, each has its own features.
- Popular Linux shells:
  - **`sh`** or the **Bourne shell**: developed at AT&T labs in the 70s by a guy named Stephen Bourne.
  - **`bash`** or the **Bourne again shell**: very popular, compatible with `sh` shell scripts. 
    - Our üñ•Ô∏è labs will focus on `bash`
  - **`ksh`** or the **Korn shell**: provides enhancements over the `sh` and it is also compatible with `bash`.
  - **`csh`** and **`tcsh`**: shells that have a syntax similar to the programming language `C`.
:::

::: footer
Want to become a pro at shell scripting? Check out [@ebrahim_mastering_2018].
:::

## Windows CMD vs PowerShell {.smaller}

- As mentioned before, Windows has its own thing.
- There are two main terminals/shells on Windows these days

::: columns

::: {.column width="55%"}
CMD
:::

::: {.column width="45%"}
Powershell
:::

:::

![](/figures/week02/Windows_Command_Prompt_running_on_Windows_8.1.png){.absolute width="45%" left="0%" top="40%"}

![](/figures/week02/Powershell_Intellisense_example_for_the_Get-Process_cmdlet.gif){.absolute width="45%" right="0%" top="40%"}

::: footer
[Original product: Microsoft. This animation: <a href="https://commons.wikimedia.org/wiki/File:Powershell_Intellisense_example_for_the_Get-Process_cmdlet.gif">Useerup</a>, <a href="https://creativecommons.org/licenses/by-sa/3.0">CC BY-SA 3.0</a>, via Wikimedia Commons]{style="font-size:0.6em;"}
:::


# Files & Filesystems

::: footer
Read more on [@pelz_fundamentals_2018, chapter 3]
:::

## What are files? {.smaller}

::: columns
::: {.column width="60%"}
![](/figures/dalee/dalle_robot_holding_question_mark.png){.absolute height="80%"}
:::

::: {.column width="40%"}

::: {.incremental}
- Ultimately, everything in a computer is just a bunch of `0`s and `1`s
- Files are a set of conventions that allows us to extract information from them.
- Let's see where these ideas come from ‚è≠Ô∏è
:::

:::

::: footer
[Image created with the [DALL¬∑E](https://openai.com/blog/dall-e/) algorithm using the prompt: *'35mm macro photography of a robot holding a question mark card, white background'*]{style="font-size:0.6em;"}
:::
:::

## Structured data: Index cards

* Origins in the 19th century, with botanist [Carl Linnaeus](https://en.wikipedia.org/wiki/Carl_Linnaeus), who needed to record species that he was studying

* This was a form of _database_
    - each piece of information about a species formed a _field_
    - each species' entry in the system formed a _record_
    - the records were _indexed_ using some reference system

---

## Heyday: Use in libraries to catalog books

![card catalog](/figures/week02/cardcatalog.png "Card catalog"){.absolute width="45%" left="0%" top="25%"}
![card catalog room](/figures/week02/cardcatalog3.png "Card catalog room"){.absolute width="45%" right="0%" top="25%"}
    

---

## A record looked like this

![](/figures/week02/cardcatalog2.png "Card record"){.absolute width="50%" left="25%" top="25%"}

---

## Dewey decimal system {.smaller}

::: {.incremental}
- a proprietary library classification system first published in the United States by Melvil Dewey in 1876
- scheme is made up of ten classes, each divided into ten divisions, each having ten sections
- the system's notation uses Arabic numbers, with three whole numbers making up the main classes and sub-classes and decimals creating further divisions
:::

::: {.fragment}
- Example:

    ```text
    500 Natural sciences and mathematics
        510 Mathematics
            516 Geometry
                516.3 Analytic geometries
                    516.37 Metric differential geometries
                        516.375 Finsler Geometry
    ```
:::
---


## Hierarchical directory structure {.smaller}

::: columns

::: {.column width="50%"}
::: incremental
- This kind of hierarchical structure is still present in all modern OSes
- A <mark>directory</mark>, or folder, is a place where many files are stored
- In theory, it can contain infinite sub-directories and files
:::
:::

::: {.column width="40%"}
:::

:::


![](/figures/week02/file_structure.png){.absolute width="40%" right="0%" top="25%"}

## UNIX directory tree 

```{dot}
//| data-id: 1
//| fig-width: 10

digraph {
  pad=0.5;
  margin=0;
	fontname="Helvetica,Arial,sans-serif";
	node [fontname="Helvetica,Arial,sans-serif", fontcolor="#212121", fontsize="20", style=filled, fillcolor="#cee8f6", color="#5cb4e4", shape=box, margin=0.4]
	edge [fontname="Helvetica,Arial,sans-serif", penwidth=3, color="#212121";]
	
	rankdir=TB;
	
	
	root          [label="/"];
	bin           [label="bin"];
	dev           [label="dev"];
	etc           [label="etc"];
	home          [label="home"];
  jonathan      [label="jonathan"];
  documents     [label="Documents"];
  workspace     [label="Workspace"];
  ds105         [label="lse-ds105-course-notes"];
  images        [label="Images"];
  videos        [label="Videos"];
  downloads     [label="Downloads"];
  lib           [label="lib"];
  mnt           [label="mnt"];
  proc          [label="proc"];
  namedroot     [label="root"];
  sbin          [label="sbin"];
  tmp           [label="tmp"];
  usr           [label="usr"];
  var           [label="var"];
  usr_lib       [label="lib"];
  usr_bin       [label="bin"];
  usr_include   [label="include"];
  var_log       [label="log"];
  var_mail      [label="mail"];
  var_spool     [label="spool"];
  var_tmp       [label="tmp"];
	
  
  root -> bin;
  root -> dev;
  root -> etc;
  root -> home -> jonathan;
  jonathan -> documents;
  documents -> workspace -> ds105;
  jonathan -> images;
  jonathan -> videos;
  jonathan -> downloads;
  root -> lib;
  root -> mnt;
  root -> proc;
  root -> namedroot;
  root -> sbin;
  root -> tmp;
  root -> usr;
  root -> var;
  usr -> usr_bin;
  usr -> usr_lib;
  usr -> usr_include;

  var -> var_log;
  var -> var_mail;
  var -> var_spool;
  var -> var_tmp;
}
```


::: footer
[Check out [this webpage](https://www.geeksforgeeks.org/unix-file-system/) for a description of what each directory represents]{}
:::

# After the ‚òï break:

- Let's open the Terminal!
- Basic shell commands
- A tour around `vim`, a file editor
- Common file formats
- How to prepare for the lab this week

------------------------------------------------------------------------

## References {style="word-break:break-all;"}

::: {#refs .r-fit-text}
::: 